/*
 * Тип Span представляет непрерывную область памяти.
 * Цель данного типа - повысить производительность и эффективность использования памяти.
 * Span позволяет избежать дополнительных выделений памяти при операции с наборами данных.
 * Поскольку Span является структурой, то объект этого типа располагаетс в стеке, а не в хипе.
 * 
 * Как структура, определенная с модификатором ref, Span имеет ряд ограничений:
 * она не может быть присвоена переменной типа Object, dynamic или переменной типа интерфейса.
 * Она не может быть полем в объекте ссылочного типа (а только внутри ref-структур).
 * Она не может использоваться в пределах операций await или yield.
 */

int[] temperatures =
[
    10, 12, 13, 14, 15, 11, 13, 15, 16, 17,
    18, 16, 15, 16, 17, 14,  9,  8, 10, 11,
    12, 14, 15, 15, 16, 15, 13, 12, 12, 11
];
Span<int> temperaturesSpan = temperatures;

Span<int> firstDecade = temperaturesSpan.Slice(0, 10);
Span<int> lastDecade = temperaturesSpan.Slice(20, 10);

temperaturesSpan[0] = 25;
Console.WriteLine(firstDecade[0]);
